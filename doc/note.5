.\" Generated by scdoc 1.11.0
.\" Complete documentation for this program is not available as a GNU info page
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.nh
.ad l
.\" Begin generated content:
.TH "note" "5" "2020-09-17"
.P
.SH NAME
.P
note - configuration file and format
.P
.SS The Anatomy of a Note
A note is a simple markdown document that contains zero or more instances of structured data encoded as YAML or JSON.\& Notes can optionally contain `front-matter` at the head of each file, which is YAML or JSON enclosed by a pair of `---`.\&
.P
.nf
.RS 4
---
title: This is a Note
tags: [ocaml, programming]
---

# Hello World!

Today will be a nice day\&.
.fi
.RE
.P
.SS The State Directory
.P
Each note is stored as a flat file inside the `state_dir` with a slug that corresponds to the
date (YYYYMMDD) on which it was created.\& If multiple notes are created on one day, an index will
be appended to the file.\&
.P
.nf
.RS 4
$ tree ~/\&.local/share/note/
/home/kevin/\&.local/share/note/
├── note-20200818-1\&.md
├── note-20200819-1\&.md
├── note-20200819-2\&.md
└── note-20200819-3\&.md
.fi
.RE
.P
.SS Configuration
.P
The behavior of \fBnote\fR can be configured with yaml file stored in \fB~/.\&config/note/config.\&yaml\fR and configure itself per the XDG Base Directory specification, see https://specifications.\&freedesktop.\&org/basedir-spec/basedir-spec-latest.\&html.\& You can view the resolved configuration by running \fBnote config\fR:
.P
.nf
.RS 4
state_dir: /home/kevin/\&.local/share/note
lock_file: /home/kevin/\&.local/share/note\&.lock
editor: nvim
on_modification: note_commit\&.sh
.fi
.RE
.P
.SS Persisting Notes with Git
.P
If the `on_modification` configuration option is set it will be called each time a note is modified.\& This feature can be used to automatically commit your notes to a git repository with a script such as below:
.P
.nf
.RS 4
#!/bin/bash
# This is an example script that can be used in conjunction with the
# on_modification config option to commit every note change to a git
# repository\&. You'll need to place it somewhere on your $PATH\&. This
# script assumes that your state_dir is also a git repository\&.
set -e

STATE_DIR="$(note config -get state_dir)"

pushd "$STATE_DIR"
git add --all
git commit -m 'automated commit'
popd
.fi
.RE
